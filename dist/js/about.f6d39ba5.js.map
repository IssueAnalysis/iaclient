{"version":3,"sources":["webpack:///./src/views/About.vue?f47a","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","domProps","_s","txt","staticRenderFns","component"],"mappings":"8GAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,MAAM,CAACG,WAAW,CAAC,CAACC,KAAK,YAAYC,QAAQ,gBAAgBC,SAAS,CAAC,UAAYV,EAAIW,GAAGX,EAAIY,WAC7NC,EAAkB,GCKtB,GACE,KAAF,QACE,KAFF,WAGI,MAAJ,CACM,IAAN,o9LAqPE,QAzPF,cCN+U,I,YCO3UC,EAAY,eACd,EACAf,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/about.f6d39ba5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\"},[_c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}],domProps:{\"innerHTML\":_vm._s(_vm.txt)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"about\">\r\n    <div v-html=\"txt\" v-highlight></div>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: \"About\",\r\n    data () {\r\n      return {\r\n        txt:\"\\\"I am using Hadoop-2.10.0.<pre><code>int main(){ print(\\\"hello world!\\\");}</code></pre>\\n\" +\r\n                \"<br>\" +\r\n                \"<br>\" +\r\n                \"\\n\" +\r\n                \"The configuration parameter `dfs.namenode.audit.loggers` allows `default` (which is the default value) and `org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger`.\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"When I use `org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger`, namenode will not be started successfully because of an `InstantiationException` thrown from `org.apache.hadoop.hdfs.server.namenode.FSNamesystem.initAuditLoggers`.åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"The root cause is that while initializing namenode, `initAuditLoggers` will be called and it will try to call the default constructor of `org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger` which doesn't have a default constructor. Thus the `InstantiationException` exception is thrown.\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"*Symptom*\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"*$ ./start-dfs.sh*\\n\" +\r\n                \"\\n\" +\r\n                \"{code:java}\\n\" +\r\n                \"\\n\" +\r\n                \"2019-12-18 14:05:20,670 ERROR org.apache.hadoop.hdfs.server.namenode.FSNamesystem: FSNamesystem initialization failed.java.lang.RuntimeException: java.lang.InstantiationException: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.initAuditLoggers(FSNamesystem.java:1024)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.<init>(FSNamesystem.java:858)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.loadFromDisk(FSNamesystem.java:677)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.NameNode.loadNamesystem(NameNode.java:674)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.NameNode.initialize(NameNode.java:736)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.NameNode.<init>(NameNode.java:961)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.NameNode.<init>(NameNode.java:940)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.NameNode.createNameNode(NameNode.java:1714)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.NameNode.main(NameNode.java:1782)\\n\" +\r\n                \"\\n\" +\r\n                \"Caused by: java.lang.InstantiationException: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger\\n\" +\r\n                \"\\n\" +\r\n                \"at java.lang.Class.newInstance(Class.java:427)\\n\" +\r\n                \"\\n\" +\r\n                \"at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.initAuditLoggers(FSNamesystem.java:1017)...\\n\" +\r\n                \"\\n\" +\r\n                \"8 more\\n\" +\r\n                \"\\n\" +\r\n                \"Caused by: java.lang.NoSuchMethodException: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger.<init>()\\n\" +\r\n                \"\\n\" +\r\n                \"at java.lang.Class.getConstructor0(Class.java:3082)\\n\" +\r\n                \"\\n\" +\r\n                \"at java.lang.Class.newInstance(Class.java:412)\\n\" +\r\n                \"\\n\" +\r\n                \"... 9 more{code}\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"*Detailed Root Cause*\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"There is no default constructor in `org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger`:åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"{code:java}\\n\" +\r\n                \"\\n\" +\r\n                \"/** \\n\" +\r\n                \"\\n\" +\r\n                \" * An {@link AuditLogger} that sends logged data directly to the metrics \\n\" +\r\n                \"\\n\" +\r\n                \" * systems. It is used when the top service is used directly by the name node \\n\" +\r\n                \"\\n\" +\r\n                \" */ \\n\" +\r\n                \"\\n\" +\r\n                \"@InterfaceAudience.Private \\n\" +\r\n                \"\\n\" +\r\n                \"public class TopAuditLogger implements AuditLogger {     \\n\" +\r\n                \"\\n\" +\r\n                \"  public static finalLogger LOG = LoggerFactory.getLogger(TopAuditLogger.class); \\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"  private final TopMetrics topMetrics; \\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"  public TopAuditLogger(TopMetrics topMetrics) {\\n\" +\r\n                \"\\n\" +\r\n                \"    Preconditions.checkNotNull(topMetrics, \\\"Cannot init with a null \\\" + \\n\" +\r\n                \"\\n\" +\r\n                \"        \\\"TopMetrics\\\");\\n\" +\r\n                \"\\n\" +\r\n                \"    this.topMetrics = topMetrics; \\n\" +\r\n                \"\\n\" +\r\n                \"  }\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"  @Override\\n\" +\r\n                \"\\n\" +\r\n                \"  public void initialize(Configuration conf) { \\n\" +\r\n                \"\\n\" +\r\n                \"  }\\n\" +\r\n                \"\\n\" +\r\n                \"{code}\\n\" +\r\n                \"\\n\" +\r\n                \"As long as the configuration parameter `dfs.namenode.audit.loggers` is set to `org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger`, `initAuditLoggers` will try to call its default constructor to make a new instance:åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"{code:java}\\n\" +\r\n                \"\\n\" +\r\n                \"private List<AuditLogger> initAuditLoggers(Configuration conf) {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ // Initialize the custom access loggers if configured.\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ Collection<String> alClasses =\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ conf.getTrimmedStringCollection(DFS_NAMENODE_AUDIT_LOGGERS_KEY);\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ List<AuditLogger> auditLoggers = Lists.newArrayList();\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ if (alClasses != null && !alClasses.isEmpty()) {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ for (String className : alClasses) {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ try {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ AuditLogger logger;\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ if (DFS_NAMENODE_DEFAULT_AUDIT_LOGGER_NAME.equals(className)) {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ åÊ logger = new DefaultAuditLogger();\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ } else {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ åÊ logger = (AuditLogger) Class.forName(className).newInstance();\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ }\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ logger.initialize(conf);\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ auditLoggers.add(logger);\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ } catch (RuntimeException re) {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ throw re;\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ } catch (Exception e) {\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ åÊ throw new RuntimeException(e);\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ åÊ }\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ åÊ }\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ }\\n\" +\r\n                \"\\n\" +\r\n                \"{code}\\n\" +\r\n                \"\\n\" +\r\n                \"`initAuditLoggers` tries to call the default constructor to make a new instance in:\\n\" +\r\n                \"\\n\" +\r\n                \"{code:java}\\n\" +\r\n                \"\\n\" +\r\n                \"logger = (AuditLogger) Class.forName(className).newInstance();\\n\" +\r\n                \"\\n\" +\r\n                \"{code}\\n\" +\r\n                \"\\n\" +\r\n                \"This is very different from the default configuration, `default`, which implements a default constructor so the default is fine.\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"*How To Reproduce*åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"The version of Hadoop: 2.10.0\\n\" +\r\n                \"\\n\" +\r\n                \" # Set the value of configuration parameter `dfs.namenode.audit.loggers` to `org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger` in \\\"hdfs-site.xml\\\"(the default value is `default`)\\n\" +\r\n                \"\\n\" +\r\n                \" # Start the namenode by running \\\"start-dfs.sh\\\"\\n\" +\r\n                \"\\n\" +\r\n                \" # The namenode will not be started successfully.\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"{code:java}\\n\" +\r\n                \"\\n\" +\r\n                \"<property>\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊ<name>dfs.namenode.audit.loggers</name>\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊ<value>org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger</value>\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊ<description>\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊåÊåÊList of classes implementing audit loggers that will receive audit events.\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊåÊåÊThese should be implementations of org.apache.hadoop.hdfs.server.namenode.AuditLogger.\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊåÊåÊThe special value \\\"default\\\" can be used to reference the default audit\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊåÊåÊlogger, which uses the configured log system. Installing custom audit loggers\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊåÊåÊmay affect the performance and stability of the NameNode. Refer to the custom\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊåÊåÊlogger's documentation for more details.\\n\" +\r\n                \"\\n\" +\r\n                \"åÊåÊ</description>\\n\" +\r\n                \"\\n\" +\r\n                \"</property>\\n\" +\r\n                \"\\n\" +\r\n                \"{code}\\n\" +\r\n                \"\\n\" +\r\n                \"åÊ\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"*How To Fix*\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"Add a default constructor for `org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger`.\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"\\n\" +\r\n                \"I wrote a patch to add a default constructor foråÊTopAuditLogger.\\\"\"\r\n      }\r\n    },\r\n    created() {\r\n      // hljs.initHighlightingOnLoad()\r\n    },\r\n  }\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=72f838d2&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}